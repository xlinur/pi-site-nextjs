@use '../../../styles/mixins.scss' as *;

.sectionHowWeWork {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  gap: 60px;

  .treeGrid {
    display: grid;
    width: 100%;

    .treeGridItem {
      position: relative;
      display: grid;
    }

    .treeGridWrapper {
      position: relative;

      &::before {
        content: '';
        position: absolute;
        background-color: var(--blue);
        z-index: -1;
      }
    }

    .treeGridCount {
      display: flex;
      height: fit-content;

      background-color: var(--white);
      padding: 10px;

      span {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 57px;
        height: 57px;
        background-color: var(--blue);
        border-radius: 50%;
        color: var(--white);
      }
    }

    blockquote > p {
      color: #bfbfbf;
    }
  }

  @mixin vertical() {
    grid-template-columns: 1fr 100px 1fr;

    .treeGridItem {
      grid-template-rows: auto 24px 1fr;

      hr {
        grid-column: 1 / 3;
        grid-row: 2;
        height: 1px;
        align-self: center;
      }

      &:nth-child(odd of div.treeGridItem) {
        grid-template-columns: 1fr 209px;
        grid-column: 1;
        .title {
          grid-column: 2;
        }

        .text {
          grid-column: 2;
        }
      }

      &:nth-child(even of div.treeGridItem) {
        grid-template-columns: 1fr 209px;
        grid-column: 3;
        .title {
          grid-column: 1;
        }

        .text {
          grid-column: 1;
        }
      }

      @for $i from 1 through 4 {
        &:nth-child(#{$i * 4 - 1}) {
          grid-row: $i * 2;
        }
      }
    }

    .treeGridWrapper {
      grid-column: 2;
      min-height: 101px;
      height: 190px;

      &:last-child {
        display: flex;
        align-items: flex-end;
        justify-content: center;
        min-height: initial;

        .treeGridCount {
          padding-bottom: 0;
        }
      }

      &::before {
        left: 50%;
        width: 1px;
        height: 100%;
      }
    }

    &.fitContent .treeGridWrapper {
      height: initial;
    }

    .treeGridCount {
      align-items: flex-start;
      justify-content: center;
    }

    @include rwd(767.9) {
      grid-template-columns: 80px 1fr;

      .treeGridItem {
        display: flex;
        flex-direction: column;
        padding-top: 14px;

        &:nth-child(odd of div.treeGridItem),
        &:nth-child(even of div.treeGridItem) {
          grid-column: 2;
        }

        hr {
          width: 100%;
          margin-top: 8px;
          margin-bottom: 12px;
        }

        @for $i from 1 through 4 {
          &:nth-child(#{$i}) {
            grid-row: $i;
          }
        }
      }

      .treeGridWrapper {
        grid-column: 1;
        height: 122px;

        &:last-child {
          align-items: flex-start;
          height: initial;

          &::before {
            display: none;
          }
        }
      }
    }
  }

  @mixin horizontal() {
    grid-template-rows: 1fr auto 1fr;

    .treeGridItem {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      padding-left: 10px;

      .text {
        max-width: 196px;
        font-weight: 400;
        font-size: 16px;
        line-height: 140%;
        color: var(--dark-gray);
      }

      @for $i from 1 through 6 {
        &:nth-child(#{$i * 4 - 1}) {
          grid-column: $i * 2;
          grid-row: 3;
        }
      }
      @for $i from 1 through 6 {
        &:nth-child(#{$i * 4 - 3}) {
          grid-column: $i * 2 - 1;
          justify-content: flex-end;
        }
      }
    }

    .treeGridWrapper {
      display: flex;
      grid-row: 2;
      width: 100%;

      &:not(:last-child) {
        &::before {
          top: 50%;
          width: 100%;
          height: 1px;
        }
      }
    }
  }

  .vertical {
    @include vertical();
  }

  .horizontal {
    @media screen and (min-width: 768px) {
      @include horizontal();
    }

    @include rwd(767.9) {
      @include vertical();
    }
  }
}
